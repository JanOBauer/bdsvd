library(aricode) #for ARI
library(bdsvd)
library(cluster) #for diana
library(mvtnorm) #for rmvnorm
library(PUGMM)   #for Ultracorrelation Model

p <- 60
n <- 180
b <- 20
HDLSS <- FALSE

design <- "b"
S <- 100 #Number of simulations


HC.RV  <- TRUE #HC-SVD with RV-coefficient? TRUE or FALSE
HC.AVR <- TRUE #HC-SVD with average linkage? TRUE or FALSE
HC.SIN <- TRUE #HC-SVD with complete linkage? TRUE or FALSE
DIANA  <- TRUE #HC with DIANA? TRUE or FALSE
UCORR  <- FALSE #HC with UCORR? TRUE or FALSE


ARI.RV.20 <- vector(length = S)
ARI.RV.40 <- vector(length = S)

ARI.AVR.20 <- vector(length = S)
ARI.AVR.40 <- vector(length = S)

ARI.SIN.20 <- vector(length = S)
ARI.SIN.40 <- vector(length = S)

ARI.DIANA.20 <- vector(length = S)
ARI.DIANA.40 <- vector(length = S)

ARI.UCORR.20 <- vector(length = S)
ARI.UCORR.40 <- vector(length = S)

TIME.RV    <- vector(length = S)
TIME.AVR   <- vector(length = S)
TIME.SIN   <- vector(length = S)
TIME.DIANA <- vector(length = S)
TIME.UCORR <- vector(length = S)

k.p <- c()


#Population clusters:
s <- p/60
cluster.20 <- rep(1:20, each = (3*s))
cluster.40 <- rep(1:40, times = ifelse(1:40 %in% seq(1, 39, 2), 2*s, 1*s))


SimulationSet <- 1:100
for(s in SimulationSet){
  set.seed(s+2)
  print(paste0("Iteration s = ", s))
  
  #Simulate data matrix X with (population) correlation matrix Rho
  Rho <- hcsvd.cor.sim(p = p, b = b, design = design)
  dist.matrix <- as.dist(1-abs(Rho))
  attr(dist.matrix, "Size") <- p
  hc.pop <- hclust(dist.matrix)
  
  X <- scale(rmvnorm(n, mean=rep(0,p), sigma=Rho, checkSymmetry = FALSE))
  colnames(X) = 1:ncol(X)
  
  if(HC.RV){
    cat("Compute HC-SVD with RV-coefficient\r")
    
    start <- proc.time()
    hcsvd.obj <- hcsvd(X, k = "Kaiser", linkage = "RV", HDLSS = HDLSS)
    TIME.RV[s] <- (proc.time() - start)[3]/60
    
    hc <- hclust(hcsvd.obj$dist.matrix)
    
    ARI.RV.20[s] <- ARI(cutree(hc.pop, k = 20), cutree(hc, k = 20))
    ARI.RV.40[s] <- ARI(cutree(hc.pop, k = 40), cutree(hc, k = 40))

  }
  
  if(HC.AVR){
    cat("Compute HC-SVD with average linkage\r")
    
    start <- proc.time()
    hcsvd.obj <- hcsvd(X, k = "Kaiser", linkage = "average", HDLSS = HDLSS)
    TIME.AVR[s] <- (proc.time() - start)[3]/60

    hc <- hclust(hcsvd.obj$dist.matrix)
    
    ARI.AVR.20[s] <- ARI(cluster.20, cutree(hc, k = 20))
    ARI.AVR.40[s] <- ARI(cluster.40, cutree(hc, k = 40))
    
  }
  
  if(HC.SIN){
    cat("Compute HC-SVD with single linkage\r")
    
    start <- proc.time()
    hcsvd.obj <- hcsvd(X, k = "Kaiser", linkage = "single", HDLSS = HDLSS)
    TIME.SIN[s] <- (proc.time() - start)[3]/60
    
    hc <- hclust(hcsvd.obj$dist.matrix)
    
    ARI.SIN.20[s] <- ARI(cluster.20, cutree(hc, k = 20))
    ARI.SIN.40[s] <- ARI(cluster.40, cutree(hc, k = 40))
    
    k.p <- c(k.p, hcsvd.obj$k.p)
  }
  
  
  if(DIANA){
    cat("Compute DIANA\r")
    
    start <- proc.time()
    est.dist.matrix <- as.dist(1-abs(cor(X)))
    attr(est.dist.matrix, "Size") <- p
    hc <- diana(est.dist.matrix)
    TIME.DIANA[s] <- (proc.time() - start)[3]/60
    
    ARI.DIANA.20[s] <- ARI(cluster.20, cutree(hc, k = 20))
    ARI.DIANA.40[s] <- ARI(cluster.40, cutree(hc, k = 40))
  }
  
  
  if(UCORR){
    cat("Compute UCORR\r")
    
    start <- proc.time()
    FFFF <- pugmm(X, model = "FFFF")
    TIME.UCORR[s] <- (proc.time() - start)[3]/60

    M <- FFFF[["sigma"]][[1]]
    D <- as.dist(1-M)
    hc <- hclust(D)
    
    ARI.UCORR.20[s] <- ARI(cluster.20, cutree(hc, k = 20))
    ARI.UCORR.40[s] <- ARI(cluster.40, cutree(hc, k = 40))
  }

  
  print(paste0(":::HC-SVD with RV-coefficient:::"))
  print(paste0("Average ARI cluster 20 = ", round(mean(ARI.RV.20[1:s])*100,2), "%"))
  print(paste0("Average ARI cluster 40 = ", round(mean(ARI.RV.40[1:s])*100,2), "%"))
  print(paste0("Average time = ", round(mean(TIME.RV[1:s]),2), " min"))
  
  print(paste0(":::HC-SVD with average linkage:::"))
  print(paste0("Average ARI cluster 20 = ", round(mean(ARI.AVR.20[1:s])*100,2), "%"))
  print(paste0("Average ARI cluster 40 = ", round(mean(ARI.AVR.40[1:s])*100,2), "%"))
  print(paste0("Average time = ", round(mean(TIME.AVR[1:s]),2), " min"))
  
  print(paste0(":::HC-SVD with complete linkage:::"))
  print(paste0("Average ARI cluster 20 = ", round(mean(ARI.SIN.20[1:s])*100,2), "%"))
  print(paste0("Average ARI cluster 40 = ", round(mean(ARI.SIN.40[1:s])*100,2), "%"))
  print(paste0("Average time = ", round(mean(TIME.SIN[1:s]),2), " min"))
  
  print(paste0(":::DIANA:::"))
  print(paste0("Average ARI cluster 20 = ", round(mean(ARI.DIANA.20[1:s])*100,2), "%"))
  print(paste0("Average ARI cluster 40 = ", round(mean(ARI.DIANA.40[1:s])*100,2), "%"))
  print(paste0("Average time = ", round(mean(TIME.SIN[1:s]),2), " min"))
  
  print(paste0(":::UCORR:::"))
  print(paste0("Average ARI cluster 20 = ", round(mean(ARI.UCORR.20[1:s])*100,2), "%"))
  print(paste0("Average ARI cluster 40 = ", round(mean(ARI.UCORR.40[1:s])*100,2), "%"))
  print(paste0("Average time = ", round(mean(TIME.UCORR[1:s]),2), " min"))

}


k.p <- as.data.frame(k.p[k.p > 0])

result <- cbind.data.frame(ARI.RV.20, ARI.RV.40,
                           ARI.AVR.20, ARI.AVR.40,
                           ARI.SIN.20, ARI.SIN.40,
                           ARI.DIANA.20, ARI.DIANA.40,
                           ARI.UCORR.20, ARI.UCORR.40,
                           TIME.RV, TIME.AVR, TIME.SIN, TIME.DIANA, TIME.UCORR
                           )



write.table(result, file = "SimB60180.txt")
write.table(k.p, file = "SimB60180kp.txt")